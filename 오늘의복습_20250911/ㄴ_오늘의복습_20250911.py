# 파일 위치 : tuple_01.py

# 1] 객체복사의 원리, 가변객체와 불변객체와의 차이점

# 정수(불변) 객체 복사
a = 10
b= a
print(f'a : {a}, b :{b}')
b= 13
print(f'a : {a}, b :{b}')
print()

# 리스트(가변) 객체 복사
list_a = [1,2,3]
list_b = list_a
print(f'list_a : {list_a},list_b :{list_b}')
# 리스트 객체 복사에서는 값 별도로 뽑아 복사하여, list_b에 대입하는 방식이 아니라,
# 기존 연결된 list_a의 데이터 [1,2,3]주소지를 list_b에 부여하는 방식이다.
list_b[0] = 100
print(f'list_a : {list_a},list_b :{list_b}')

# 그래서 출력하면 원본 값이 수정이 된걸 확인할 수 있다.

# 그래서 리스트를 복사하고 싶으면
list_b == list_a.copy()
# 이렇게 적으면 된다.

# 가변객체.copy() : 주어진 가변객체의 값을 별도로 복사한다.
# 불변객체에는 문법상 사용불가하다.

# 여기서 같은 방법을 했음에도 불구하고,
# 출력된 a,b 값과 list_a, list_b의 값이 다른방식으로 출력된다.
 
## 왜 리스트는 주소를 복사하고 정수는 복사를 하는지?
# 가변객체와 불변객체와의 차이점

# 가변객체(리스트, 딕셔너리, 셋)은 주소(참조)를 복사한다.
# 가변 객체는 내용이 바뀔 수 있기 때문에,
# 주소를 공유함으로써 메모리 효율을 높이고, 의도적으로 객체 간 연동을 가능하게 한다.

# 불변객체(문자열, 실수, 튜플)은 값을 복사한다.
# 불변 객체는 내용을 절대 바꿀 수 없기 때문에,
# 복사해도 서로 간섭이 없고, 독립적인 값처럼 안전하게 사용할 수 있다.

# 여기서 새로 배운 메소드 :
# .copy()