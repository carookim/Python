# 파일 위치 : dict_01.py

# 7] 딕셔너리

# 7]-1 각 컨테이너 마다 들어갈 수 있는 요소
# 리스트(가변)를 이루는 요소 : 불변, 가변
# 튜플(불변)을 이루는 요소 : 불변, 가변
# 집합(가변)을 이루는 요소 : 불변
# 딕셔너리(가변)를 이루는 요소 : 불변, 가변

# 여기서 집합은 가변인데 왜 불변 요소만 받는지?
# 집합은 내부에서 해시구조로 값 데이터에 접근한다.
# 다른 가변 객체 리스트,딕셔너리는 각각 인덱스,키로 접근이 가능하므로 가변도 받을 수 있다.

# 7]-2 딕셔너리
# 딕셔너리, 쌍으로 짝지어진 데이터
# 가변, 반복 가능, 인덱스 X, 순서 X
student = {
    "name" : "홍길동",
    "age" : 20,
    "major" : "컴퓨터"
}
# 키와 값의 쌍으로 구성되있다. {key : value, key :value}

# 각 요소에 접근할때는 고유한 키 값으로 접근한다 (인덱스가 없다 == 순서가 없다)
# 키는 변하지 않는 자료형만 가능(문자열, 숫자, 튜플)하다
# 키는 중복이 안되며, value 값으로 사용될 수 없다

# CRUD 가능 (딕셔너리, 리스트, 집합 // 그외 데이터베이스 관련 객체)
# 글자	의미	설명
# C	Create	새로운 데이터를 생성/저장
# R	Read	저장된 데이터를 조회/읽기
# U	Update	기존 데이터를 수정
# D	Delete	기존 데이터를 삭제

# Create, 생성하기
student = {
    "name" : "홍길동",
    "age" : 20,
    "major" : "컴퓨터"
}

# Read, 읽기
print(student['name'])
print()

# Update, 업데이트 하기
student["name"] = '이순신'
print(f'studnet = {student}')
print()

# 추가하기
# 업데이트와 추가하는 방법이 동일하다.
# 입력되는 값이 없는 값이라면 추가되고, 있는 값이라면 업데이트 된다.
student['add'] = '서울시 강남구'
print(f'studnet = {student}')
print()

# Delete, 삭제하기
del student["name"]
print(f'studnet = {student}')
print()

#

# 딕셔너리 생성하기
food = {'비빔밥' : 10000, '햄버거' : 7000, '고등어 정식' : 12000}
print(food)
print()

# 딕셔너리 특정 키의 데이터를 수정하기
food["비빔밥"] = 11000
print(food)
print()

# 딕셔너리에서 값을 출력하기
print(food['비빔밥'])